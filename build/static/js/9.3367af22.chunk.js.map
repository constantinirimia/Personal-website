{"version":3,"sources":["components/Contact/EmailLink.js","pages/Contact.js"],"names":["messages","EmailLink","useState","idx","updateIter","message","updateMessage","length","char","updateChar","isActive","setIsActive","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","newIdx","newChar","slice","className","style","fontFamily","fontSize","onMouseEnter","onMouseLeave","Contact","Main","title","description","href","ContactIcons"],"mappings":"mKAEMA,EAAW,CACf,KACA,QACA,OACA,YACA,YACA,qBACA,yCACA,aACA,6CACA,iCACA,kFACA,kCACA,mDACA,mBACA,qCACA,mBACA,UA6DaC,EAxCG,WAChB,IAGA,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAiCF,mBAASF,EAASG,IAAnD,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA2BJ,mBAASF,EAASG,GAAKI,QAAlD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCP,oBAAS,GAAzC,mBAAOQ,EAAP,KAAiBC,EAAjB,KAqBA,OA9CkB,SAACC,EAAUC,GAC7B,IAAMC,EAAgBC,mBAEtBC,qBAAU,WACRF,EAAcG,QAAUL,IACvB,CAACA,IAEJI,qBAAU,WACR,GAAIH,EAAO,CACT,IAAMK,EAAKC,aAAY,WACrBL,EAAcG,YACbJ,GACH,OAAO,kBAAMO,cAAcF,IAE7B,OAAO,eACN,CAACL,IAYJQ,EACE,WACE,IAAIC,EAASnB,EACToB,EAAUf,EACVA,EAZK,IAYUR,EAASG,GAAKI,SAC/Be,GAAU,EACVC,EAAU,GAERD,IAAWtB,EAASO,OACtBI,GAAY,IAEZL,EAAcN,EAASsB,GAAQE,MAAM,EAAGD,IACxCnB,EAAWkB,GACXb,EAAWc,EAAU,MAGzBb,EAvBY,GAuBO,MAInB,qBACEe,UAAU,mBACVC,MAAO,CAAEC,WAAY,eAAgBC,SAAU,IAC/CC,aAAc,kBAAMlB,GAAY,IAChCmB,aAAc,kBAAM3B,EAAMH,EAASO,QAAUI,GAAY,IAJ3D,SAME,+BAAON,O,QChDE0B,UAtBC,kBACd,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,YAAY,2DAFd,SAIE,0BAAST,UAAU,OAAOP,GAAG,UAA7B,UACE,iCACE,qBAAKO,UAAU,QAAf,SACE,oBAAI,cAAY,UAAhB,SACE,mBAAGU,KAAM,8BAAT,2BAIN,sBAAKV,UAAU,WAAf,UACE,oBAAIC,MAAO,CAAEE,SAAU,MACvB,cAAC,EAAD,OAEF,cAACQ,EAAA,EAAD","file":"static/js/9.3367af22.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst messages = [\n  \"Hi\",\n  \"Hello\",\n  \"Hola\",\n  \"Buna ziua\",\n  \"Ni hao ma\",\n  \"Welcome to my page\",\n  \"You can contact me to ask me anything!\",\n  \"Really !!!\",\n  \"Well, not really anything. But most things\",\n  \"You can ask me for example... \",\n  \"what is the shortest path from any given node to each node in a connected graph\",\n  \"or how to reverse a linked list\",\n  \"or what is my favorite travel destination so far\",\n  \"You get the idea\",\n  \"I am here waiting for your message\",\n  \"Talk to you soon\",\n  \"Thanks\",\n];\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay) {\n      const id = setInterval(() => {\n        savedCallback.current();\n      }, delay);\n      return () => clearInterval(id);\n    }\n    return () => {}; // pass linter\n  }, [delay]);\n};\n\nconst EmailLink = () => {\n  const hold = 25;\n  const delay = 40;\n\n  const [idx, updateIter] = useState(0); // points to current message\n  const [message, updateMessage] = useState(messages[idx]);\n  const [char, updateChar] = useState(messages[idx].length); // points to current char\n  const [isActive, setIsActive] = useState(true); // disable when all messages are printed\n\n  useInterval(\n    () => {\n      let newIdx = idx;\n      let newChar = char;\n      if (char - hold >= messages[idx].length) {\n        newIdx += 1;\n        newChar = 0;\n      }\n      if (newIdx === messages.length) {\n        setIsActive(false);\n      } else {\n        updateMessage(messages[newIdx].slice(0, newChar));\n        updateIter(newIdx);\n        updateChar(newChar + 1);\n      }\n    },\n    isActive ? delay : null\n  );\n\n  return (\n    <div\n      className=\"inline-container\"\n      style={{ fontFamily: \"Hanalei Fill\", fontSize: 20 }}\n      onMouseEnter={() => setIsActive(false)}\n      onMouseLeave={() => idx < messages.length && setIsActive(true)}\n    >\n      <span>{message}</span>\n    </div>\n  );\n};\n\nexport default EmailLink;\n","import React from \"react\";\nimport Main from \"../layouts/Main\";\nimport EmailLink from \"../components/Contact/EmailLink\";\nimport ContactIcons from \"../components/Contact/ContactIcons\";\n\nconst Contact = () => (\n  <Main\n    title=\"Contact\"\n    description=\"Contact Constantin IRIMIA via email cirimia100@gmail.com\"\n  >\n    <article className=\"post\" id=\"contact\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\">\n            <a href={\"mailto:cirimia100@gmail.com\"}>Contact</a>\n          </h2>\n        </div>\n      </header>\n      <div className=\"email-at\">\n        <h1 style={{ fontSize: 20 }}></h1>\n        <EmailLink />\n      </div>\n      <ContactIcons />\n    </article>\n  </Main>\n);\n\nexport default Contact;\n"],"sourceRoot":""}